
@import 'setup';
@import 'main-styles';
@import 'fonts';
@import 'speechBubbles';
@import 'media-query';
@import 'popup';
@import 'animations';


.entirePage {
  display: flex;
  justify-content: space-evenly;
}

.middle {
  display: flex;
  flex-direction: column;
  justify-content: space-between; // may need to be flex-end once speech bubbles are back??
  min-width: 30%;
  max-width: 48%;
}

.welcome {
  text-align: center;
  justify-self: flex-start;
}

// .leftPerson {
//   border: 1px solid darkorchid;
// }

// .rightPerson {
//   border: 1px solid seagreen;
// }

// styling the buttons
.buttonBox {
  text-align: center;
}

button {
  background-color: white;
  font-size: 3rem;
  border-right: 3px solid #a59eef;
  border-bottom: 3px solid #a59eef;
  border-left: 3px solid #9ee9ef;
  border-top: 3px solid #9ee9ef;
  border-radius: 10px;
  padding: 5px 10px;
  margin-bottom: 10px;
}

button:hover,
button:focus {
  border-right: 3px solid #e9ef9e;
  border-bottom: 3px solid #e9ef9e;
  border-left: 3px solid #efcd9e;
  border-top: 3px solid #efcd9e;
  border-radius: 10px;
}

.turnIndicatorContainer {
  display: flex;
  justify-content: center;
  margin-bottom: 10px;
}

.rightTurnIndicator {
  display: flex;
}

.switch {
  width: 60px;
  height: 30px;
  background-color: #ccc;
  border-radius: 15px;
  border: none;
  color: #fff;
  font-weight: bold;
  text-transform: uppercase;
  transition: background-color 0.3s ease;
}

.switch.on {
  background-color: #5cb85c;
}

.switch.off {
  background-color: #d9534f;
}

header {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#toggleButton {
  width: fit-content;
  align-self: center;

}

/* CSS rules are kept repetitive so that you can get CSS rules for each button easily :) */

* {
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

*:focus {
  outline: none;
}

//chat GPT suggestion
.toggle {
  position: relative;
  display: flex;
  align-items: center;
  width: auto;
  height: 34px;
}

.toggle input {
  display: none;
}

.toggle label {
  // position: absolute;
  // top: 0;
  // left: 0;
  // width: 100%;
  // height: 100%;
  // border-radius: 34px;
  // background-color: #ccc;
  // cursor: pointer;
  position: relative;
    flex: 0 0 auto;
    /* Add flex property */
    width: 45px;
    /* Set desired width for the toggle label */
    height: 20px;
    /* Set desired height for the toggle label */
    border-radius: 20px;
    /* Adjust border-radius to match height */
    background-color: #ccc;
    cursor: pointer;
    
}

.toggle label:before {
  // content: "";
  // position: absolute;
  // top: 4px;
  // left: 4px;
  // width: 26px;
  // height: 26px;
  // border-radius: 50%;
  // background-color: white;
  // transition: transform 0.2s;
  content: "";
    position: absolute;
    top: 2px;
    left: 2px;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: white;
    transition: transform 0.2s;
  // z-index: 2;
}

.toggle input:checked+label {
  background-color: #2196F3;
}

.toggle input:checked+label:before {
  transform: translateX(26px);
}

.onoff {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.switchText p {
  margin: 0 10px;
  font-size: 1.5em;
}

.onoff p {
  position: relative;
}

.onoff p span {
  display: inline-block;
  transition: box-shadow 0.5s;
}

.SwitchText p.glow span {
  animation: glowing 2s infinite;
  color: yellow;
}

@keyframes glowing {
  0% {
      opacity: 1;
      text-shadow: 0 0 5px yellow, 0 0 20px yellow, 0 0 30px yellow, 0 0 40px yellow, 0 0 50px yellow;
    }
  
    50% {
      opacity: 0.5;
      text-shadow: none;
    }
  
    100% {
      opacity: 1;
      text-shadow: 0 0 5px yellow, 0 0 20px yellow, 0 0 30px yellow, 0 0 40px yellow, 0 0 50px yellow;
    }
}

.glow {
  text-shadow: 0 0 10px white, 0 0 20px white, 0 0 30px white, 0 0 40px white, 0 0 70px yellow, 0 0 80px yellow, 0 0 100px yellow, 0 0 150px yellow;
}



